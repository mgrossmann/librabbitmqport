# Update bump details accordingly. Use bump check to confirm.
# bump: librabbitmq-version /LIBRABBITMQ_VERSION="(.*)"/ https://github.com/alanxz/rabbitmq-c.git|semver:*
LIBRABBITMQ_VERSION="0.15.0" 

export ZOPEN_STABLE_TAG="v${LIBRABBITMQ_VERSION}"
export ZOPEN_STABLE_URL="https://github.com/alanxz/rabbitmq-c.git"
export ZOPEN_STABLE_DEPS="cmake make pkgconfig zoslib openssl"

export ZOPEN_BUILD_LINE="STABLE"
export ZOPEN_CATEGORIES="library networking"

export ZOPEN_COMP=CLANG

export ZOPEN_CONFIGURE="cmake"
export ZOPEN_CONFIGURE_OPTS="-B ../build -DBUILD_SHARED_LIBS=ON --install-prefix \"\$ZOPEN_INSTALL_DIR/\" ."

export ZOPEN_MAKE="cmake"
export ZOPEN_MAKE_OPTS="--build ../build --parallel \$ZOPEN_NUM_JOBS --config Release"
export ZOPEN_MAKE_MINIMAL=Y

export ZOPEN_INSTALL="cmake"
export ZOPEN_INSTALL_OPTS="--install ../build"


# temporary solution until pkgconfig sets this variable itself
export PKG_CONFIG_PATH="${ZOPEN_ROOTFS}/usr/local/lib/pkgconfig/:$PKG_CONFIG_PATH"

zopen_check_results()
{
  dir="$1"
  pfx="$2"
  chk="$1/$2_check.log"

  # Echo the following information to gauge build health
  echo "actualFailures:0"
  echo "totalTests:1"
  echo "expectedFailures:0"
  echo "expectedTotalTests:1"
}

zopen_get_version()
{
  # Modify to echo the version of your tool/library
  # Rather than hardcoding the version, obtain the version by running the tool/library
  echo ${LIBRABBITMQ_VERSION}
}
